kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: compactor-data
spec:
  accessModes: [ "ReadWriteOnce" ]
  storageClassName: local-path-storage
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-compactor
  labels:
    app.kubernetes.io/name: loki-compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: loki-compactor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: loki-compactor
    spec:
      containers:
      - name: loki-compactor
        image: grafana/loki:2.4.1
        args:
          - "-config.file=/etc/loki/loki.yaml"
          - "-target=compactor"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3100
          name: http-metrics
          protocol: TCP
        - containerPort: 9095
          name: grpc
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "1000Mi"
          requests:
            cpu: "0.5"
            memory: "500Mi"
        volumeMounts:
        - name: loki-config
          mountPath: /etc/loki/
          readOnly: true
        - name: data
          mountPath: /loki
        livenessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        readinessProbe:
          httpGet:
            path: /ready
            port: http-metrics
          initialDelaySeconds: 45
        securityContext:
          readOnlyRootFilesystem: true
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      volumes:
        - name: loki-config
          secret:
            secretName: loki-config
        - name: data
          persistentVolumeClaim:
            claimName: compactor-data
